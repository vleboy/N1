namespace: 'bill'

attrs: sn,businessKey,parent,parentRole,parentSn,parentName,parentDisplayId,parentDisplayName,userId,userName,gameType,gameId,type,originalAmount,amount,balance,sourceIP,country,province,city,createdAt
    
batchInsert:
    - replace into bill({{ bill.attrs }}) values
    - for:
        array: data
        sql: (:sn,:businessKey,:parent,:parentRole,:parentSn,:parentName,:parentDisplayId,:parentDisplayName,:userId,:userName,:gameType,:gameId,:type,:originalAmount,:amount,:balance,:sourceIP,:country,:province,:city,:createdAt)
        seperator: ','

chinaPlayerCount: # 中国地图-玩家人数
    - select count(a.userId) as total,a.province from
    - (select distinct(userId),province from bill where createdAt between :startTime and :endTime and country = '中国'
    - if:
        test: :gameType != null
        sql: and gameType = :gameType
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - ) as a
    - group by a.province

chinaHandleAmount: # 中国地图-金额汇总
    - select
    # 判断count与sum
    - if:
        test: :method == 'betCount'
        sql: count(sn) as total,province
    - if:
        test: :method != 'betCount'
        sql: round(sum(amount),2) as total,province
    - from bill where createdAt between :startTime and :endTime and country = '中国'
    # 判断是否使用type
    - if:
        test: :type != null
        sql: and type = :type
    # 判断是否使用gameType
    - if:
        test: :gameType != null
        sql: and gameType = :gameType
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - group by province

worldPlayerCount: # 世界地图-玩家人数
    - select count(a.userId) as total,a.province from 
    - (select distinct(userId),country as province from bill where createdAt between :startTime and :endTime and country != '其他'
    - if:
        test: :gameType != null
        sql: and gameType = :gameType
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - ) as a
    - group by a.province

worldHandleAmount: # 世界地图-金额汇总
    - select
    # 判断count与sum
    - if:
        test: :method == 'betCount'
        sql: count(sn) as total,country as province
    - if:
        test: :method != 'betCount'
        sql: round(sum(amount),2) as total,country as province
    - from bill where createdAt between :startTime and :endTime and country != '其他'
    # 判断是否使用type
    - if:
        test: :type != null
        sql: and type = :type
    # 判断是否使用gameType
    - if:
        test: :gameType != null
        sql: and gameType = :gameType
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - group by country

playerCountDay: # 日报表-玩家人数
    - select count(userId) count,t.days from
    - (SELECT FROM_UNIXTIME(createdAt/1000,'%Y-%m-%d') days,userId from bill where createdAt between :startTime and :endTime
    - if:
        test: :gameType != null
        sql: and gameType = :gameType
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - group by days,userId) as t
    - GROUP BY t.days ORDER BY t.days

handleAmountDay: # 日报表-金额汇总
    - SELECT FROM_UNIXTIME(createdAt/1000,'%Y-%m-%d') days,
    # 判断count与sum
    - if:
        test: :method == 'betCount'
        sql: count(sn) count
    - if:
        test: :method != 'betCount'
        sql: round(sum(amount),2) count
    - from bill where createdAt between :startTime and :endTime
    # 判断是否使用type
    - if:
        test: :type != null
        sql: and type = :type
    # 判断是否使用gameType
    - if:
        test: :gameType != null
        sql: and gameType = :gameType
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - group by days ORDER BY days

playerCountGraph: # 时间段柱状图-玩家人数
    - SELECT t.hours,count(t.userId) count from
    - (select distinct(userId),FROM_UNIXTIME(createdAt/1000,'%k') hours from bill where createdAt between :startTime and :endTime
    - if:
        test: :gameType != null
        sql: and gameType = :gameType
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - ) as t
    - GROUP BY t.hours

handleAmountGraph: # 时间段柱状图-金额汇总
    - SELECT FROM_UNIXTIME(createdAt/1000,'%k') hours,
    # 判断count与sum
    - if:
        test: :method == 'betCount'
        sql: count(sn) count
    - if:
        test: :method != 'betCount'
        sql: round(sum(amount),2) count
    - from bill where createdAt between :startTime and :endTime
    # 判断是否使用type
    - if:
        test: :type != null
        sql: and type = :type
    # 判断是否使用gameType
    - if:
        test: :gameType != null
        sql: and gameType = :gameType
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - GROUP BY hours

playerCountPie: # 饼图-玩家人数
    - select count(c.userId) as num,c.gameType from 
    - (SELECT gameType,userId from bill where createdAt between :startTime and :endTime 
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - GROUP BY gameType,userId) as c 
    - GROUP BY c.gameType

handleAmountPie: # 饼图-金额汇总
    - SELECT
    # 判断count与sum
    - if:
        test: :method == 'betCount'
        sql: count(sn) as num,gameType
    - if:
        test: :method != 'betCount'
        sql: round(sum(amount),2) as num,gameType
    - from bill where createdAt between :startTime and :endTime
    # 判断是否使用type
    - if:
        test: :type != null
        sql: and type = :type
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - GROUP BY gameType

playerCountRank: # 商户排行-玩家人数
    - SELECT t.parentSn,t.parentDisplayName,count(t.userId) as num from 
    - (select distinct(userId), parentDisplayName,parentSn from bill where createdAt between :startTime and :endTime
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - ) 
    - as t group by t.parentDisplayName,t.parentSn ORDER BY num asc

handleAmountRank: # 商户排行榜-金额汇总
    - SELECT
    # 判断count与sum
    - if:
        test: :method == 'betCount'
        sql: count(sn) as num,parentDisplayName,parentSn
    - if:
        test: :method != 'betCount'
        sql: round(sum(amount),2) as num,parentDisplayName,parentSn
    - from bill where createdAt between :startTime and :endTime
    # 判断是否使用type
    - if:
        test: :type != null
        sql: and type = :type
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - GROUP BY parentDisplayName,parentSn 
    - if:
        test: :method == 'betAmount'
        sql: ORDER BY num desc
    - if:
        test: :method == 'betCount'
        sql: ORDER BY num asc
    - if:
        test: :method == 'retAmount'
        sql: ORDER BY num asc
    - if:
        test: :method == 'winloseAmount'
        sql: ORDER BY num desc

handleAmountPlayerRank: # 玩家排行榜-金额汇总
    - SELECT 
    # 判断count与sum
    - if:
        test: :method == 'betCount'
        sql: count(sn) as num,userName
    - if:
        test: :method != 'betCount'
        sql: round(sum(amount),2) as num,userName
    - from bill where createdAt between :startTime and :endTime
    # 判断是否使用type
    - if:
        test: :type != null
        sql: and type = :type
    - if:
        test: :parent != null
        sql: and gameType = :gameType
    - GROUP BY userName
    - if:
        test: :method == 'betAmount'
        sql: ORDER BY num desc
    - if:
        test: :method == 'betCount'
        sql: ORDER BY num asc
    - if:
        test: :method == 'retAmount'
        sql: ORDER BY num asc
    - if:
        test: :method == 'winloseAmount'
        sql: ORDER BY num desc